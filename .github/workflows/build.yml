on: [push]

jobs:

  build:

    strategy:
      matrix:
        os:
          - ubuntu-16.04
          - macos-latest
          - windows-latest
        include:
          - os: ubuntu-16.04
            cmake-generator: Ninja
            setup-python: 2.7
            wheel-platform: "manylinux2014_x86_64"
          - os: macos-latest
            cmake-generator: Ninja
            wheel-platform: "macosx_10_14_x86_64"
          - os: windows-latest
            setup-python: 2.7
            cmake-platform: 'x64'
            vcpkg-path: '${VCPKG_INSTALLATION_ROOT}'
            vcpkg-triplet: 'x64-windows-static-md'

    runs-on: ${{ matrix.os }}

    steps:

    - uses: actions/checkout@v2

    - name: Checkout submodules
      shell: bash
      run: |
        git submodule update --init --force --recursive
    
    - name: Set up Python
      if: matrix.setup-python
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.setup-python }}
        
    - name: Install Ninja
      if: contains(matrix.cmake-generator, 'Ninja')
      run: |
        pip install ninja

    - name: Run vcpkg
      if: startsWith(matrix.os, 'windows')
      run: |
        vcpkg install dirent:x64-windows-static-md zlib:x64-windows-static-md

    - name: Build extension
      shell: bash
      run: |
        python setup.py \
          build_ext \
            ${{ matrix.cmake-generator && format('--cmake-generator="{0}"', matrix.cmake-generator) }} \
            ${{ matrix.cmake-platform && format('--cmake-platform="{0}"', matrix.cmake-platform) }} \
            ${{ matrix.vcpkg-path && format('--vcpkg-path="{0}"', matrix.vcpkg-path) }} \
            ${{ matrix.vcpkg-triplet && format('--vcpkg-triplet="{0}"', matrix.vcpkg-triplet) }} \
          build

    - name: Build wheel
      shell: bash
      run: |
        pip install wheel
        python setup.py \
          bdist_wheel \
            --skip-build \
            ${{ matrix.wheel-platform && format('--plat-name={0}', matrix.wheel-platform) }}

    - name: Publish package
      if: startsWith(github.event.ref, 'refs/tags')
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.pypi_password }}
      run: |
        pip install twine
        twine upload dist/*
